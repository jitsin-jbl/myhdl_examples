-- File: m_serio_ex.vhd
-- Generated by MyHDL 0.8.1
-- Date: Sat Nov 29 14:22:45 2014


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_081.all;

entity m_serio_ex is
    port (
        clock: in std_logic;
        reset: in std_logic;
        sdi: in std_logic;
        sdo: out std_logic
    );
end entity m_serio_ex;


architecture MyHDL of m_serio_ex is


constant nby: integer := 8;
constant nbx: integer := 8;
constant Nin: integer := 8;
constant imax: integer := 2**6;
constant Np: integer := 8;
constant Nout: integer := 8;



signal gserio_oreo: std_logic;
signal gserio_scnt: unsigned(6 downto 0);
signal gserio_irei: std_logic;
type t_array_pout is array(0 to 8-1) of unsigned(7 downto 0);
signal pout: t_array_pout;
type t_array_pin is array(0 to 8-1) of unsigned(7 downto 0);
signal pin: t_array_pin;
type t_array_gserio_ireg is array(0 to 8-1) of unsigned(7 downto 0);
signal gserio_ireg: t_array_gserio_ireg;
type t_array_gserio_oreg is array(0 to 8-1) of unsigned(7 downto 0);
signal gserio_oreg: t_array_gserio_oreg;

begin




M_SERIO_EX_GSERIO_RTL_SHIFTS: process (clock) is
begin
    if rising_edge(clock) then
        if (reset = '0') then
            gserio_oreo <= '0';
            gserio_oreg(0) <= to_unsigned(0, 8);
            gserio_oreg(1) <= to_unsigned(0, 8);
            gserio_oreg(2) <= to_unsigned(0, 8);
            gserio_oreg(3) <= to_unsigned(0, 8);
            gserio_oreg(4) <= to_unsigned(0, 8);
            gserio_oreg(5) <= to_unsigned(0, 8);
            gserio_oreg(6) <= to_unsigned(0, 8);
            gserio_oreg(7) <= to_unsigned(0, 8);
            gserio_scnt <= to_unsigned(0, 7);
            gserio_irei <= '0';
            gserio_ireg(0) <= to_unsigned(0, 8);
            gserio_ireg(1) <= to_unsigned(0, 8);
            gserio_ireg(2) <= to_unsigned(0, 8);
            gserio_ireg(3) <= to_unsigned(0, 8);
            gserio_ireg(4) <= to_unsigned(0, 8);
            gserio_ireg(5) <= to_unsigned(0, 8);
            gserio_ireg(6) <= to_unsigned(0, 8);
            gserio_ireg(7) <= to_unsigned(0, 8);
            sdo <= '0';
        else
            gserio_irei <= sdi;
            gserio_oreo <= gserio_oreg((Nout - 1))((nby - 1));
            sdo <= gserio_oreo;
            for ii in 0 to Nin-1 loop
                if (ii = 0) then
                    gserio_ireg(ii) <= unsigned'(gserio_ireg(ii)((nbx - 1)-1 downto 0) & gserio_irei);
                else
                    gserio_ireg(ii) <= unsigned'(gserio_ireg(ii)((nbx - 1)-1 downto 0) & gserio_ireg((ii - 1))((nbx - 1)));
                end if;
            end loop;
            if (gserio_scnt = imax) then
                gserio_scnt <= to_unsigned(0, 7);
                for oo in 0 to Nout-1 loop
                    gserio_oreg(oo) <= pout(oo);
                end loop;
            else
                gserio_scnt <= (gserio_scnt + 1);
                for oo in 0 to Nout-1 loop
                    if (oo = 0) then
                        gserio_oreg(oo) <= shift_left(gserio_oreg(oo), 1);
                    else
                        gserio_oreg(oo) <= unsigned'(gserio_oreg(oo)((nby - 1)-1 downto 0) & gserio_oreg((oo - 1))((nby - 1)));
                    end if;
                end loop;
            end if;
        end if;
    end if;
end process M_SERIO_EX_GSERIO_RTL_SHIFTS;


M_SERIO_EX_GSERIO_RTL_ASSIGN: process (gserio_ireg(0), gserio_ireg(1), gserio_ireg(2), gserio_ireg(3), gserio_ireg(4), gserio_ireg(5), gserio_ireg(6), gserio_ireg(7)) is
begin
    for ii in 0 to Nin-1 loop
        pin(ii) <= gserio_ireg(ii);
    end loop;
end process M_SERIO_EX_GSERIO_RTL_ASSIGN;


M_SERIO_EX_RTL: process (clock) is
begin
    if rising_edge(clock) then
        if (reset = '0') then
            pout(0) <= to_unsigned(0, 8);
            pout(1) <= to_unsigned(0, 8);
            pout(2) <= to_unsigned(0, 8);
            pout(3) <= to_unsigned(0, 8);
            pout(4) <= to_unsigned(0, 8);
            pout(5) <= to_unsigned(0, 8);
            pout(6) <= to_unsigned(0, 8);
            pout(7) <= to_unsigned(0, 8);
        else
            for ii in 0 to Np-1 loop
                pout(ii) <= pin(ii);
            end loop;
        end if;
    end if;
end process M_SERIO_EX_RTL;

end architecture MyHDL;
