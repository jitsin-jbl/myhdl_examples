// File: m_serio_ex.v
// Generated by MyHDL 0.8.1
// Date: Sat Nov 29 14:22:44 2014


`timescale 1ns/10ps

module m_serio_ex (
    clock,
    reset,
    sdi,
    sdo
);


input clock;
input reset;
input sdi;
output sdo;
reg sdo;

reg gserio_oreo;
reg [6:0] gserio_scnt;
reg gserio_irei;

reg [7:0] pout [0:8-1];
reg [7:0] pin [0:8-1];
reg [7:0] gserio_ireg [0:8-1];
reg [7:0] gserio_oreg [0:8-1];




always @(posedge clock) begin: M_SERIO_EX_GSERIO_RTL_SHIFTS
    integer ii;
    integer oo;
    if (reset == 0) begin
        gserio_oreo <= 0;
        gserio_oreg[0] <= 0;
        gserio_oreg[1] <= 0;
        gserio_oreg[2] <= 0;
        gserio_oreg[3] <= 0;
        gserio_oreg[4] <= 0;
        gserio_oreg[5] <= 0;
        gserio_oreg[6] <= 0;
        gserio_oreg[7] <= 0;
        gserio_scnt <= 0;
        gserio_irei <= 0;
        gserio_ireg[0] <= 0;
        gserio_ireg[1] <= 0;
        gserio_ireg[2] <= 0;
        gserio_ireg[3] <= 0;
        gserio_ireg[4] <= 0;
        gserio_ireg[5] <= 0;
        gserio_ireg[6] <= 0;
        gserio_ireg[7] <= 0;
        sdo <= 0;
    end
    else begin
        gserio_irei <= sdi;
        gserio_oreo <= gserio_oreg[(8 - 1)][(8 - 1)];
        sdo <= gserio_oreo;
        for (ii=0; ii<8; ii=ii+1) begin
            if ((ii == 0)) begin
                gserio_ireg[ii] <= {gserio_ireg[ii][(8 - 1)-1:0], gserio_irei};
            end
            else begin
                gserio_ireg[ii] <= {gserio_ireg[ii][(8 - 1)-1:0], gserio_ireg[(ii - 1)][(8 - 1)]};
            end
        end
        if ((gserio_scnt == 64)) begin
            gserio_scnt <= 0;
            for (oo=0; oo<8; oo=oo+1) begin
                gserio_oreg[oo] <= pout[oo];
            end
        end
        else begin
            gserio_scnt <= (gserio_scnt + 1);
            for (oo=0; oo<8; oo=oo+1) begin
                if ((oo == 0)) begin
                    gserio_oreg[oo] <= (gserio_oreg[oo] << 1);
                end
                else begin
                    gserio_oreg[oo] <= {gserio_oreg[oo][(8 - 1)-1:0], gserio_oreg[(oo - 1)][(8 - 1)]};
                end
            end
        end
    end
end


always @(gserio_ireg[0], gserio_ireg[1], gserio_ireg[2], gserio_ireg[3], gserio_ireg[4], gserio_ireg[5], gserio_ireg[6], gserio_ireg[7]) begin: M_SERIO_EX_GSERIO_RTL_ASSIGN
    integer ii;
    for (ii=0; ii<8; ii=ii+1) begin
        pin[ii] = gserio_ireg[ii];
    end
end


always @(posedge clock) begin: M_SERIO_EX_RTL
    integer ii;
    if (reset == 0) begin
        pout[0] <= 0;
        pout[1] <= 0;
        pout[2] <= 0;
        pout[3] <= 0;
        pout[4] <= 0;
        pout[5] <= 0;
        pout[6] <= 0;
        pout[7] <= 0;
    end
    else begin
        for (ii=0; ii<8; ii=ii+1) begin
            pout[ii] <= pin[ii];
        end
    end
end

endmodule
