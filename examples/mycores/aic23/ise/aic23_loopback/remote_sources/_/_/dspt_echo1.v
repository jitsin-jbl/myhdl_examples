// File: dspt_echo1.v
// Generated by MyHDL 0.7
// Date: Tue May  3 22:54:31 2011


`timescale 1ns/10ps

module dspt_echo1 (
    clk,
    au_fs,
    au_in,
    au_out
);
// Single channel echo
// 
// The following is a basic single channel echo.  An input sample
// is combined with a delayed version of the sample.  This is the
// hardware description of the audio echo.  This description will
// be converted 
// 
// The delay is constant and set by the C_BD parameter.  
// 
// Ports
// ---------------------------------------------
//   :param au_fs:  input, sample rate strobe
//   :param au_in:  input, audio sample input
//   :param au_out: output, audio sample output
//    
// Configurable parameters:
// ---------------------------------------------
//    :param C_BD    : Delay buffer depth / len
//    :param C_BW    : Delay buffer word width
//    :param C_SR    : Sample rate
//    :param C_SW    : Input sample bit width
//    :param XDEVICE : Which Xilinx FPGA (BRAM utilization)

input clk;
input au_fs;
input [23:0] au_in;
output [23:0] au_out;
reg [23:0] au_out;

reg _fs;
reg signed [23:0] _in;
reg [12:0] rd_ptr;
reg signed [23:0] _out;
reg [12:0] wr_ptr;

reg signed [15:0] mem [0:8192-1];




always @(posedge clk) begin: DSPT_ECHO1_RTL_DESC
    if ((rd_ptr != wr_ptr)) begin
        rd_ptr <= wr_ptr;
    end
    else begin
        _fs <= au_fs;
        _in <= au_in;
        if (_fs) begin
            mem[wr_ptr] <= $signed(_in >>> 8);
            wr_ptr <= ((wr_ptr + 1) % 8192);
            rd_ptr <= ((wr_ptr + 1) % 8192);
        end
        _out <= (mem[rd_ptr] << (8 - 1));
        au_out <= (_in + _out);
    end
end

endmodule
