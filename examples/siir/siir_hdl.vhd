-- File: siir_hdl.vhd
-- Generated by MyHDL 0.9.0
-- Date: Mon Oct 26 14:14:03 2015


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_090.all;

entity siir_hdl is
    port (
        clk: in std_logic;
        x: in signed (23 downto 0);
        y: out signed (23 downto 0);
        ts: in std_logic
    );
end entity siir_hdl;
-- This is a simple MyHDL IIR Direct Form I Filter example.  This is intended
-- to only be used with the SIIR object.

architecture MyHDL of siir_hdl is


constant a1: integer := -15219500;
constant Q: integer := 23;
constant a2: integer := 6963733;
constant b0: integer := 2**23;
constant Qd: integer := 48;
constant b2: integer := 8688210;
constant b1: integer := 17049881;



signal yacc: signed (48 downto 0);
type t_array_ffd is array(0 to 2-1) of signed (48 downto 0);
signal ffd: t_array_ffd;
type t_array_fbd is array(0 to 2-1) of signed (48 downto 0);
signal fbd: t_array_fbd;

begin





SIIR_HDL_RTL_IIR: process (clk) is
begin
    if rising_edge(clk) then
        if bool(ts) then
            ffd(1) <= ffd(0);
            ffd(0) <= resize(x, 49);
            fbd(1) <= fbd(0);
            fbd(0) <= resize(signed(unsigned(yacc(Qd-1 downto Q))), 49);
        end if;
        y <= resize(signed(unsigned(yacc(Qd-1 downto Q))), 24);
    end if;
end process SIIR_HDL_RTL_IIR;



yacc <= resize(((((b0 * x) + (b1 * ffd(0))) + (b2 * ffd(1))) - (a1 * fbd(0))) - (a2 * fbd(1)), 49);

end architecture MyHDL;
