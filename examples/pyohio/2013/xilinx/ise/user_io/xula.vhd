-- File: xula.vhd
-- Generated by MyHDL 0.8
-- Date: Fri Nov 29 10:00:06 2013


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_08.all;

entity xula is
    port (
        clock: in std_logic;
        reset: in std_logic;
        button: in std_logic;
        led: inout std_logic
    );
end entity xula;
-- blink the LED, button go faster
-- Blink the LED at a default slow rate, each time the button
-- is pressed increase the blink rate.  Once the blink rate
-- reaches a maximum rate start over with the slow rate.
-- The rate limits are controlled by parameters:
-- *max_blink* and *min_blink* in seconds.  The button also needs
-- to be debounce.  Only one rate change is desired per button
-- press, to achieve this the button needs to be debounced.  The
-- debounce rate is also controlled by a parameter *debounce* which
-- is also in seconds.

architecture MyHDL of xula is


constant bmax: integer := 24000000;
constant bmin: integer := 396000;
constant debounce_ticks: integer := 1200000;



signal blink_count: unsigned(25 downto 0);
signal pressed_count: unsigned(21 downto 0);
signal _button: std_logic;
signal button_count: unsigned(21 downto 0);
signal blink_count_max: unsigned(25 downto 0);

begin




XULA_RTL_DEBOUNCE: process (clock) is
begin
    if rising_edge(clock) then
        if (reset = '0') then
            button_count <= to_unsigned(0, 22);
            pressed_count <= to_unsigned(0, 22);
            _button <= '0';
        else
            if (button = '0') then
                if (pressed_count < debounce_ticks) then
                    pressed_count <= (pressed_count + 1);
                end if;
            else
                if (button_count >= debounce_ticks) then
                    _button <= '1';
                    button_count <= to_unsigned(0, 22);
                else
                    _button <= '0';
                end if;
                if (pressed_count > 0) then
                    button_count <= pressed_count;
                    pressed_count <= to_unsigned(0, 22);
                end if;
            end if;
        end if;
    end if;
end process XULA_RTL_DEBOUNCE;


XULA_RTL_BLINK: process (clock) is
begin
    if rising_edge(clock) then
        if (reset = '0') then
            blink_count_max <= to_unsigned(24000000, 26);
            led <= '0';
            blink_count <= to_unsigned(0, 26);
        else
            if bool(_button) then
                if (blink_count_max > bmin) then
                    blink_count_max <= shift_right(blink_count_max, 1);
                else
                    blink_count_max <= to_unsigned(bmax, 26);
                end if;
            else
                if (blink_count < blink_count_max) then
                    blink_count <= (blink_count + 1);
                else
                    led <= stdl((not bool(led)));
                    blink_count <= to_unsigned(1, 26);
                end if;
            end if;
        end if;
    end if;
end process XULA_RTL_BLINK;

end architecture MyHDL;
