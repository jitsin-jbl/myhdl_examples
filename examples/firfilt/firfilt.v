// File: firfilt.v
// Generated by MyHDL 0.8dev
// Date: Sat Jun 30 20:42:36 2012


`timescale 1ns/10ps

module firfilt (
    sig_in,
    sig_out,
    clk,
    rst
);


input signed [15:0] sig_in;
output signed [15:0] sig_out;
reg signed [15:0] sig_out;
input clk;
input rst;


reg signed [15:0] taps [0:33-1];




always @(posedge clk) begin: FIRFILT_HDL_SOP
    integer ii;
    integer sop;
    integer c;
    if (rst) begin
        for (ii=0; ii<33; ii=ii+1) begin
            taps[ii] <= 0;
        end
        sig_out <= 0;
    end
    else begin
        sop = 0;
        for (ii=0; ii<33; ii=ii+1) begin
            if ((ii == 0)) begin
                taps[ii] <= sig_in;
            end
            else begin
                taps[ii] <= taps[(ii - 1)];
            end
            case (ii)
                0: c = 7;
                1: c = 40;
                2: c = 82;
                3: c = 120;
                4: c = 117;
                5: c = 27;
                6: c = -174;
                7: c = -453;
                8: c = -701;
                9: c = -746;
                10: c = -416;
                11: c = 391;
                12: c = 1645;
                13: c = 3154;
                14: c = 4607;
                15: c = 5659;
                16: c = 6043;
                17: c = 5659;
                18: c = 4607;
                19: c = 3154;
                20: c = 1645;
                21: c = 391;
                22: c = -416;
                23: c = -746;
                24: c = -701;
                25: c = -453;
                26: c = -174;
                27: c = 27;
                28: c = 117;
                29: c = 120;
                30: c = 82;
                31: c = 40;
                default: c = 7;
            endcase
            sop = ($signed({1'b0, sop}) + (taps[ii] * c));
        end
        sig_out <= $signed(sop >>> 15);
    end
end

endmodule
